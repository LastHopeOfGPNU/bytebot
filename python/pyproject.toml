[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bytebot"
version = "0.1.0"
description = "Open-Source AI Desktop Agent - Python Implementation"
authors = [{name = "Bytebot Team", email = "team@bytebot.ai"}]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Core web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",  # PostgreSQL async driver
    
    # Data validation and serialization
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # HTTP client
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # WebSocket support
    "websockets>=12.0",
    "python-socketio>=5.10.0",
    
    # AI/LLM clients
    "anthropic>=0.7.0",
    "openai>=1.3.0",
    "google-generativeai>=0.3.0",
    
    # Desktop automation (for bytebotd)
    "pyautogui>=0.9.54",
    "pillow>=10.1.0",
    "opencv-python>=4.8.0",
    "pynput>=1.7.6",
    
    # Utilities
    "python-multipart>=0.0.6",  # For file uploads
    "python-jose[cryptography]>=3.3.0",  # For JWT
    "passlib[bcrypt]>=1.7.4",  # For password hashing
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",  # Better logging
    "rich>=13.7.0",  # Rich console output
    
    # Background tasks
    "celery>=5.3.0",
    "redis>=5.0.0",
    
    # Testing (dev dependencies)
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For testing FastAPI
]

[project.optional-dependencies]
dev = [
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
bytebot-agent = "bytebot.api.main:app"
bytebot-desktop = "bytebot.desktop.service:desktop_service"
bytebot-ui = "bytebot.ui.main:main"

[project.urls]
Homepage = "https://bytebot.ai"
Documentation = "https://docs.bytebot.ai"
Repository = "https://github.com/bytebot-ai/bytebot"
"Bug Tracker" = "https://github.com/bytebot-ai/bytebot/issues"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["bytebot"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]